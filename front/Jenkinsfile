@NonCPS
def sendSlackBuildMessage(color, message){
    slackSend(channel: '젠킨스-로그', color: color, message: message)
}

pipeline {
    agent any

//     triggers {
//         GenericTrigger(
//             genericVariables: [
//                 [key: 'ref', value: '$.ref'],
//                 [key: 'target', value: '$.data.target']
//             ],
//             token: 'asd',
//             causeString: 'Triggered on $ref',
//             regexpFilterText: '$ref $target',
//             regexpFilterExpression: 'refs/heads/main userFe',
//             printContributedVariables: true,
//             printPostContent: true
//         )
//     }

    environment {
            FRONT_SRC_DIR = 'front'
        }

    tools {
        nodejs 'nodejs'
    }

    stages {
        stage('Check Diff') {
            steps {
                slackSend(color: '#0000FF', message: "START: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
//                 git 'https://github.com/IDontHaveBrain/AutoClassification.git'
//                 lastChanges since: 'LAST_SUCCESSFUL_BUILD', format:'SIDE',matching: 'LINE'
            }
        }

        stage('Setup') {
            steps {
                sh 'npm install -g yarn'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir(FRONT_SRC_DIR) {
                    sh 'yarn install'
                }
            }
        }

        stage('Build') {
            steps {
                dir(FRONT_SRC_DIR) {
                    sh 'yarn build'
                }
            }
        }

        stage('Copy Built Files') {
            steps {
                sh '''
                    mkdir -p /usr/share/nginx/html
                    cp -r front/build/* /usr/share/nginx/html/
                '''
            }
        }
    }
    post {
        success {
            slackSend(color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        failure {
            slackSend(color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
    }
}
