name: 'AiServer Build Test'

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: 'AiServer Build Test'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r ./AiServer/requirements.txt

      - name: Make AiServer executable
        run: chmod +x ./AiServer/app.py

      - name: Start AiServer and perform health check
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python ./AiServer/app.py > server.log 2>&1 &
          SERVER_PID=$!
          echo "Waiting for server to start..."
          sleep 10
          MAX_RETRIES=5
          RETRY_COUNT=0
          until curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/health | grep -q "200" || [ $RETRY_COUNT -eq $MAX_RETRIES ]; do
            echo "Health check failed. Retrying in 5 seconds..."
            sleep 5
            RETRY_COUNT=$((RETRY_COUNT+1))
          done
          if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            echo "Health check failed after $MAX_RETRIES attempts. Server log:"
            cat server.log
            exit 1
          fi
          echo "Health check passed successfully."
          kill $SERVER_PID

      - if: github.ref == 'refs/heads/main'
        name: 'Deploy'
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          data: '{ "target": "${{ secrets.AITARGET }}" }'
          webhook_type: 'json-extended'
          verbose: true
          verify_ssl: false
